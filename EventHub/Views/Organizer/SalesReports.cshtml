@{
    ViewData["Title"] = "Sales Reports - EventHub";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/organizer-sales-reports.css" asp-append-version="true" />
}

<!-- Page Header -->
<section class="page-header">
    <div class="container">
        <div class="header-content">
            <div class="header-text">
                <h1 class="page-title"><i class="bi bi-graph-up me-3"></i>Sales Reports</h1>
                <p class="page-subtitle">Track ticket sales, revenue trends, and payment analytics</p>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Dashboard", "Organizer")">Dashboard</a></li>
                        <li class="breadcrumb-item active">Sales Reports</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</section>

<!-- Filters Section -->
<section class="filters-section py-4">
    <div class="container">
        <div class="filter-card">
            <div class="filter-header">
                <h5 class="filter-title">
                    <i class="bi bi-funnel me-2"></i>Report Filters
                </h5>
            </div>
            <div class="filter-controls">
                <!-- Time Frame Selection -->
                <div class="filter-group">
                    <label class="filter-label">Time Frame</label>
                    <select id="timeFrame" class="form-select" onchange="updateReports()">
                        <option value="7">Past 7 Days</option>
                        <option value="30">Past 30 Days</option>
                        <option value="90">Past 90 Days</option>
                        <option value="180">Past 6 Months</option>
                        <option value="365">Past Year</option>
                        <option value="all">All Time</option>
                    </select>
                </div>

                <!-- Event Filter -->
                <div class="filter-group">
                    <label class="filter-label">Select Event</label>
                    <select id="eventFilter" class="form-select" onchange="updateReports()">
                        <option value="">All Events</option>
                        @if (ViewBag.Events != null)
                        {
                            @foreach (var evt in ViewBag.Events)
                            {
                                <option value="@evt.Id">@evt.Title</option>
                            }
                        }
                    </select>
                </div>

                <!-- Status Filter -->
                <div class="filter-group">
                    <label class="filter-label">Payment Status</label>
                    <select id="statusFilter" class="form-select" onchange="updateReports()">
                        <option value="">All Statuses</option>
                        <option value="Completed">Completed</option>
                        <option value="Pending">Pending</option>
                        <option value="Failed">Failed</option>
                    </select>
                </div>

                <!-- Export Button -->
                <div class="filter-group filter-actions">
                    <button class="btn btn-export" onclick="exportReport()">
                        <i class="bi bi-download me-2"></i>Export to CSV
                    </button>
                    <button class="btn btn-print" onclick="printReport()">
                        <i class="bi bi-printer me-2"></i>Print
                    </button>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Key Metrics Section -->
<section class="metrics-section py-4">
    <div class="container">
        <div class="row g-3">
            <!-- Total Revenue Card -->
            <div class="col-lg-3 col-md-6">
                <div class="metric-card revenue">
                    <div class="metric-icon">
                        <i class="bi bi-currency-dollar"></i>
                    </div>
                    <div class="metric-content">
                        <p class="metric-label">Total Revenue</p>
                        <h3 class="metric-value" id="totalRevenue">Rs. 0</h3>
                        <small class="metric-change text-success" id="revenueChange">
                            <i class="bi bi-arrow-up"></i> +12.5% vs previous
                        </small>
                    </div>
                </div>
            </div>

            <!-- Total Tickets Sold Card -->
            <div class="col-lg-3 col-md-6">
                <div class="metric-card tickets">
                    <div class="metric-icon">
                        <i class="bi bi-ticket-perforated"></i>
                    </div>
                    <div class="metric-content">
                        <p class="metric-label">Tickets Sold</p>
                        <h3 class="metric-value" id="totalTickets">0</h3>
                        <small class="metric-info">Across all events</small>
                    </div>
                </div>
            </div>

            <!-- Total Bookings Card -->
            <div class="col-lg-3 col-md-6">
                <div class="metric-card bookings">
                    <div class="metric-icon">
                        <i class="bi bi-cart-check"></i>
                    </div>
                    <div class="metric-content">
                        <p class="metric-label">Total Bookings</p>
                        <h3 class="metric-value" id="totalBookings">0</h3>
                        <small class="metric-info">Completed transactions</small>
                    </div>
                </div>
            </div>

            <!-- Average Order Value Card -->
            <div class="col-lg-3 col-md-6">
                <div class="metric-card average">
                    <div class="metric-icon">
                        <i class="bi bi-percent"></i>
                    </div>
                    <div class="metric-content">
                        <p class="metric-label">Avg Order Value</p>
                        <h3 class="metric-value" id="avgOrderValue">Rs. 0</h3>
                        <small class="metric-info">Per booking</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Charts Section -->
<section class="charts-section py-5">
    <div class="container">
        <div class="row g-4">
            <!-- Revenue Trend Chart -->
            <div class="col-lg-8">
                <div class="chart-card">
                    <div class="chart-header">
                        <h5 class="chart-title">
                            <i class="bi bi-graph-up me-2"></i>Revenue Trend
                        </h5>
                        <span class="chart-period" id="chartPeriod">Past 7 Days</span>
                    </div>
                    <div class="chart-container">
                        <canvas id="revenueTrendChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- Payment Status Breakdown -->
            <div class="col-lg-4">
                <div class="chart-card">
                    <div class="chart-header">
                        <h5 class="chart-title">
                            <i class="bi bi-pie-chart me-2"></i>Payment Status
                        </h5>
                    </div>
                    <div class="chart-container">
                        <canvas id="paymentStatusChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="row g-4 mt-2">
            <!-- Top Events by Revenue -->
            <div class="col-lg-6">
                <div class="chart-card">
                    <div class="chart-header">
                        <h5 class="chart-title">
                            <i class="bi bi-star me-2"></i>Top Events by Revenue
                        </h5>
                    </div>
                    <div class="chart-container">
                        <canvas id="topEventsChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- Ticket Sales Distribution -->
            <div class="col-lg-6">
                <div class="chart-card">
                    <div class="chart-header">
                        <h5 class="chart-title">
                            <i class="bi bi-diagram-3 me-2"></i>Ticket Category Distribution
                        </h5>
                    </div>
                    <div class="chart-container">
                        <canvas id="ticketDistributionChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Detailed Sales Table -->
<section class="table-section py-5">
    <div class="container">
        <div class="table-card">
            <div class="table-header">
                <h5 class="table-title">
                    <i class="bi bi-table me-2"></i>Recent Sales Details
                </h5>
                <div class="table-controls">
                    <input type="text" class="form-control search-input" id="searchTable"
                           placeholder="Search bookings...">
                </div>
            </div>

            <div class="table-wrapper">
                <table class="sales-table" id="salesTable">
                    <thead>
                        <tr>
                            <th>Booking Ref</th>
                            <th>Event</th>
                            <th>Customer</th>
                            <th>Booking Date</th>
                            <th>Quantity</th>
                            <th>Revenue</th>
                            <th>Discount</th>
                            <th>Payment Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="salesTableBody">
                        <!-- Populated by JavaScript -->
                    </tbody>
                </table>
            </div>

            <div class="table-pagination">
                <div class="pagination-info">
                    Showing <span id="pageInfo">0</span> entries
                </div>
                <nav aria-label="Page navigation">
                    <ul class="pagination" id="paginationControls">
                        <!-- Populated by JavaScript -->
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</section>

<!-- Chart.js Library -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>

<script>
    let revenueTrendChart, paymentStatusChart, topEventsChart, ticketDistributionChart;
    let currentPage = 1;
    const pageSize = 10;

    // Initialize on page load
    document.addEventListener('DOMContentLoaded', function () {
        initializeCharts();
        loadSalesData();
    });

    // Initialize empty charts
    function initializeCharts() {
        // Revenue Trend Chart
        const revenueTrendCtx = document.getElementById('revenueTrendChart').getContext('2d');
        revenueTrendChart = new Chart(revenueTrendCtx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Daily Revenue',
                    data: [],
                    borderColor: '#667eea',
                    backgroundColor: 'rgba(102, 126, 234, 0.1)',
                    borderWidth: 3,
                    fill: true,
                    tension: 0.4,
                    pointRadius: 5,
                    pointBackgroundColor: '#667eea',
                    pointBorderColor: '#fff',
                    pointBorderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function (value) {
                                return 'Rs. ' + value.toLocaleString();
                            }
                        }
                    }
                }
            }
        });

        // Payment Status Chart
        const paymentStatusCtx = document.getElementById('paymentStatusChart').getContext('2d');
        paymentStatusChart = new Chart(paymentStatusCtx, {
            type: 'doughnut',
            data: {
                labels: ['Completed', 'Pending', 'Failed'],
                datasets: [{
                    data: [0, 0, 0],
                    backgroundColor: ['#10b981', '#f59e0b', '#ef4444'],
                    borderColor: '#fff',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });

        // Top Events Chart
        const topEventsCtx = document.getElementById('topEventsChart').getContext('2d');
        topEventsChart = new Chart(topEventsCtx, {
            type: 'bar',
            data: {
                labels: [],
                datasets: [{
                    label: 'Revenue',
                    data: [],
                    backgroundColor: '#667eea',
                    borderRadius: 8
                }]
            },
            options: {
                indexAxis: 'y',
                responsive: true,
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    x: {
                        ticks: {
                            callback: function (value) {
                                return 'Rs. ' + value.toLocaleString();
                            }
                        }
                    }
                }
            }
        });

        // Ticket Distribution Chart
        const ticketDistCtx = document.getElementById('ticketDistributionChart').getContext('2d');
        ticketDistributionChart = new Chart(ticketDistCtx, {
            type: 'pie',
            data: {
                labels: [],
                datasets: [{
                    data: [],
                    backgroundColor: ['#667eea', '#764ba2', '#f093fb', '#10b981', '#f59e0b']
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
    }

    // Load sales data
    function loadSalesData() {
        const timeFrame = document.getElementById('timeFrame').value;
        const eventId = document.getElementById('eventFilter').value;
        const status = document.getElementById('statusFilter').value;

        fetch('@Url.Action("GetSalesReportData", "Organizer")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
            },
            body: JSON.stringify({
                timeFrame: timeFrame,
                eventId: eventId || null,
                paymentStatus: status || null
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                updateMetrics(data.metrics);
                updateCharts(data.charts);
                updateTable(data.sales);
            }
        })
        .catch(error => console.error('Error loading sales data:', error));
    }

    // Update metric cards
    function updateMetrics(metrics) {
        document.getElementById('totalRevenue').textContent = 'Rs. ' + metrics.totalRevenue.toLocaleString();
        document.getElementById('totalTickets').textContent = metrics.totalTickets;
        document.getElementById('totalBookings').textContent = metrics.totalBookings;
        document.getElementById('avgOrderValue').textContent = 'Rs. ' + metrics.avgOrderValue.toLocaleString();
    }

    // Update charts with data
    function updateCharts(data) {
        // Revenue Trend
        revenueTrendChart.data.labels = data.revenueTrend.dates;
        revenueTrendChart.data.datasets[0].data = data.revenueTrend.amounts;
        revenueTrendChart.update();

        // Payment Status
        paymentStatusChart.data.datasets[0].data = data.paymentStatus;
        paymentStatusChart.update();

        // Top Events
        topEventsChart.data.labels = data.topEvents.names;
        topEventsChart.data.datasets[0].data = data.topEvents.revenue;
        topEventsChart.update();

        // Ticket Distribution
        ticketDistributionChart.data.labels = data.ticketDistribution.categories;
        ticketDistributionChart.data.datasets[0].data = data.ticketDistribution.counts;
        ticketDistributionChart.update();
    }

    // Update sales table
    function updateTable(sales) {
        const tbody = document.getElementById('salesTableBody');
        tbody.innerHTML = '';

        sales.slice((currentPage - 1) * pageSize, currentPage * pageSize).forEach(sale => {
            const row = `
                <tr>
                    <td><strong>${sale.bookingReference}</strong></td>
                    <td>${sale.eventTitle}</td>
                    <td>${sale.customerName}</td>
                    <td>${new Date(sale.bookingDate).toLocaleDateString()}</td>
                    <td>${sale.quantity}</td>
                    <td class="revenue">Rs. ${sale.totalAmount.toLocaleString()}</td>
                    <td>${sale.discountAmount > 0 ? 'Rs. ' + sale.discountAmount.toLocaleString() : '-'}</td>
                    <td>
                        <span class="status status-${sale.paymentStatus.toLowerCase()}">
                            ${sale.paymentStatus}
                        </span>
                    </td>
                    <td>
                        <button class="btn btn-sm btn-details" onclick="viewDetails(${sale.bookingId})">
                            View
                        </button>
                    </td>
                </tr>
            `;
            tbody.innerHTML += row;
        });

        document.getElementById('pageInfo').textContent = sales.length;
    }

    // Update reports on filter change
    function updateReports() {
        currentPage = 1;
        loadSalesData();
    }

    // Export to CSV
    function exportReport() {
        const timeFrame = document.getElementById('timeFrame').value;
        window.location.href = `@Url.Action("ExportSalesReport", "Organizer")?timeFrame=${timeFrame}`;
    }

    // Print report
    function printReport() {
        window.print();
    }

    // View booking details
    function viewDetails(bookingId) {
        window.location.href = `@Url.Action("BookingDetails", "Organizer")?id=${bookingId}`;
    }

    // Search table
    document.getElementById('searchTable').addEventListener('keyup', function (e) {
        const query = e.target.value.toLowerCase();
        const rows = document.querySelectorAll('#salesTable tbody tr');
        rows.forEach(row => {
            const text = row.textContent.toLowerCase();
            row.style.display = text.includes(query) ? '' : 'none';
        });
    });
</script>