@model EventHub.Models.Entities.Event

@{
    ViewData["Title"] = Model.Title + " - EventHub";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var ticketsSold = Model.TotalTickets - Model.AvailableTickets;
    var percentageSold = Model.TotalTickets > 0 ? (double)ticketsSold / Model.TotalTickets * 100 : 0;
    var isLoggedIn = !string.IsNullOrEmpty(Context.Session.GetString("UserId"));
    var currentUserId = Context.Session.GetString("UserId");
    var isOrganizer = Model.OrganizerId.ToString() == currentUserId;
    var userRole = Context.Session.GetString("UserRole");
}

@section Styles {
    <link rel="stylesheet" href="~/css/event-details.css" asp-append-version="true" />
}

<!-- Breadcrumb -->
<section class="breadcrumb-section py-3">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Event")">Events</a></li>
                <li class="breadcrumb-item active">@Model.Title</li>
            </ol>
        </nav>
    </div>
</section>

<!-- Event Details Section -->
<section class="event-details-section py-5">
    <div class="container">
        <div class="row g-4">
            <!-- Left Column - Event Information -->
            <div class="col-lg-8">
                <!-- Event Header -->
                <div class="event-header-card">
                    <div class="event-image-container">
                        <img src="@(Model.ImageUrl ?? "/images/events/default-event.jpg")"
                             alt="@Model.Title"
                             class="event-main-image">
                        <div class="event-badges">
                            <span class="badge-category">@Model.Category</span>
                            @if (Model.IsActive)
                            {
                                <span class="badge-status active">Active</span>
                            }
                            else
                            {
                                <span class="badge-status inactive">Inactive</span>
                            }
                        </div>
                    </div>

                    <div class="event-header-content">
                        <h1 class="event-title">@Model.Title</h1>

                        <div class="event-meta">
                            <div class="meta-item">
                                <i class="bi bi-calendar-event"></i>
                                <span>@Model.EventDate.ToString("dddd, MMMM dd, yyyy")</span>
                            </div>
                            <div class="meta-item">
                                <i class="bi bi-clock"></i>
                                <span>@Model.EventTime.ToString(@"hh\:mm")</span>
                            </div>
                            <div class="meta-item">
                                <i class="bi bi-geo-alt"></i>
                                <span>@Model.Venue?.Name, @Model.Venue?.Location</span>
                            </div>
                            <div class="meta-item">
                                <i class="bi bi-person"></i>
                                <span>Organized by @Model.Organizer?.Name</span>
                            </div>
                        </div>

                        @if (isOrganizer || userRole == "Admin")
                        {
                            <div class="organizer-actions mt-3">
                                <a href="@Url.Action("Edit", "Organizer", new { id = Model.Id })"
                                   class="btn btn-warning btn-sm">
                                    <i class="bi bi-pencil me-1"></i>Edit Event
                                </a>
                                <button type="button" class="btn btn-danger btn-sm"
                                        onclick="confirmDelete(@Model.Id)">
                                    <i class="bi bi-trash me-1"></i>Delete Event
                                </button>
                            </div>
                        }
                    </div>
                </div>

                <!-- Event Description -->
                <div class="event-section">
                    <h3 class="section-title">
                        <i class="bi bi-info-circle me-2"></i>About This Event
                    </h3>
                    <div class="event-description">
                        <p>@Model.Description</p>
                    </div>
                </div>

                <!-- Venue Information -->
                <div class="event-section">
                    <h3 class="section-title">
                        <i class="bi bi-geo-alt me-2"></i>Venue Information
                    </h3>
                    <div class="venue-card">
                        <div class="venue-info">
                            <h5 class="venue-name">@Model.Venue?.Name</h5>
                            <p class="venue-address">
                                <i class="bi bi-map me-2"></i>@Model.Venue?.Address, @Model.Venue?.Location
                            </p>
                            <p class="venue-capacity">
                                <i class="bi bi-people me-2"></i>Capacity: @Model.Venue?.Capacity people
                            </p>
                        </div>
                    </div>
                </div>

                <!-- Organizer Information -->
                <div class="event-section">
                    <h3 class="section-title">
                        <i class="bi bi-person-badge me-2"></i>Event Organizer
                    </h3>
                    <div class="organizer-card">
                        <div class="organizer-info">
                            <h5 class="organizer-name">@Model.Organizer?.Name</h5>
                            <p class="organizer-email">
                                <i class="bi bi-envelope me-2"></i>@Model.Organizer?.Email
                            </p>
                            @if (!string.IsNullOrEmpty(Model.Organizer?.Phone))
                            {
                                <p class="organizer-phone">
                                    <i class="bi bi-telephone me-2"></i>@Model.Organizer?.Phone
                                </p>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Column - Booking Card -->
            <div class="col-lg-4">
                <div class="booking-card sticky-top">
                    <div class="booking-header">
                        <div class="price-section">
                            <span class="price-label">Price per ticket</span>
                            <h2 class="price-value">Rs. @Model.TicketPrice.ToString("N0")</h2>
                        </div>
                    </div>

                    <div class="booking-body">
                        <!-- Ticket Availability -->
                        <div class="availability-section">
                            <div class="availability-header">
                                <span class="availability-label">Tickets Available</span>
                                <span class="availability-count">
                                    @Model.AvailableTickets / @Model.TotalTickets
                                </span>
                            </div>
                            <div class="progress-bar-container">
                                <div class="progress-bar-fill" style="width: @percentageSold.ToString("F0")%"></div>
                            </div>
                            <small class="availability-text">
                                @percentageSold.ToString("F0")% sold
                            </small>
                        </div>

                        @if (Model.AvailableTickets > 0 && Model.IsActive)
                        {
                            @if (isLoggedIn)
                            {
                                <form asp-controller="Booking" asp-action="Create" method="post">
                                    <input type="hidden" name="EventId" value="@Model.Id" />

                                    <div class="quantity-selector mb-3">
                                        <label class="form-label">Number of Tickets</label>
                                        <div class="quantity-controls">
                                            <button type="button" class="btn-quantity" onclick="decreaseQuantity()">
                                                <i class="bi bi-dash"></i>
                                            </button>
                                            <input type="number" id="ticketQuantity" name="Quantity"
                                                   class="quantity-input" value="1" min="1"
                                                   max="@Math.Min(10, Model.AvailableTickets)" readonly>
                                            <button type="button" class="btn-quantity" onclick="increaseQuantity(@Math.Min(10, Model.AvailableTickets))">
                                                <i class="bi bi-plus"></i>
                                            </button>
                                        </div>
                                    </div>

                                    <div class="total-section mb-3">
                                        <div class="total-row">
                                            <span>Subtotal</span>
                                            <span id="subtotal">Rs. @Model.TicketPrice.ToString("N0")</span>
                                        </div>
                                        <div class="total-row total">
                                            <strong>Total Amount</strong>
                                            <strong id="totalAmount">Rs. @Model.TicketPrice.ToString("N0")</strong>
                                        </div>
                                    </div>

                                    <button type="submit" class="btn btn-book w-100">
                                        <i class="bi bi-cart-check me-2"></i>Book Now
                                    </button>
                                </form>
                            }
                            else
                            {
                                <a href="@Url.Action("Login", "Account", new { returnUrl = Url.Action("Details", "Event", new { id = Model.Id }) })"
                                   class="btn btn-book w-100">
                                    <i class="bi bi-box-arrow-in-right me-2"></i>Login to Book
                                </a>
                            }
                        }
                        else if (!Model.IsActive)
                        {
                            <div class="alert alert-warning">
                                <i class="bi bi-exclamation-triangle me-2"></i>
                                This event is currently inactive
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-danger">
                                <i class="bi bi-x-circle me-2"></i>
                                Sorry, tickets are sold out!
                            </div>
                        }

                        <!-- Security Badge -->
                        <div class="security-badge mt-3">
                            <i class="bi bi-shield-check text-success"></i>
                            <span>Secure booking guaranteed</span>
                        </div>
                    </div>

                    <!-- Event Stats -->
                    <div class="stats-card mt-4">
                        <h6>Event Statistics</h6>
                        <div class="stat-item">
                            <i class="bi bi-ticket"></i>
                            <div>
                                <strong>@ticketsSold</strong>
                                <small>Tickets sold</small>
                            </div>
                        </div>
                        <div class="stat-item">
                            <i class="bi bi-calendar-check"></i>
                            <div>
                                <strong>@Model.EventDate.ToString("MMM dd")</strong>
                                <small>Event date</small>
                            </div>
                        </div>
                        <div class="stat-item">
                            <i class="bi bi-people"></i>
                            <div>
                                <strong>@Model.TotalTickets</strong>
                                <small>Total capacity</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Delete Confirmation Form -->
<form id="deleteForm" asp-action="Delete" asp-controller="Event" method="post" class="d-none">
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" value="@Model.Id" />
</form>

@section Scripts {
    <script>
        const ticketPrice = @Model.TicketPrice;
        const maxTickets = @Math.Min(10, Model.AvailableTickets);

        function updateTotal() {
            const quantity = parseInt(document.getElementById('ticketQuantity').value);
            const subtotal = ticketPrice * quantity;
            const total = subtotal;

            document.getElementById('subtotal').textContent = 'Rs. ' + subtotal.toLocaleString();
            document.getElementById('totalAmount').textContent = 'Rs. ' + total.toLocaleString();
        }

        function increaseQuantity(max) {
            const input = document.getElementById('ticketQuantity');
            if (parseInt(input.value) < max) {
                input.value = parseInt(input.value) + 1;
                updateTotal();
            }
        }

        function decreaseQuantity() {
            const input = document.getElementById('ticketQuantity');
            if (parseInt(input.value) > 1) {
                input.value = parseInt(input.value) - 1;
                updateTotal();
            }
        }

        function confirmDelete(eventId) {
            if (confirm('Are you sure you want to delete this event? This action cannot be undone.')) {
                document.getElementById('deleteForm').submit();
            }
        }

        // Add smooth scroll for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({ behavior: 'smooth', block: 'start' });
                }
            });
        });
    </script>
}