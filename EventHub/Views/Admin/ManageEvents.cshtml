@model EventHub.Models.ViewModels.AdminEventsListViewModel
@{
    ViewData["Title"] = "Manage Events";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="~/css/admin-styles.css" asp-append-version="true" />
}
<div class="container-fluid px-4 py-4">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-1">
                <i class="bi bi-calendar-event me-2"></i>Manage Events
            </h1>
            <p class="text-muted mb-0">View and manage all events in the system</p>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row g-3 mb-4">
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="bg-primary bg-opacity-10 rounded p-3">
                                <i class="bi bi-calendar-check text-primary fs-4"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="text-muted mb-1">Total Events</h6>
                            <h3 class="mb-0">@Model.TotalEvents</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="bg-success bg-opacity-10 rounded p-3">
                                <i class="bi bi-check-circle text-success fs-4"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="text-muted mb-1">Active Events</h6>
                            <h3 class="mb-0">@Model.ActiveEvents</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="bg-info bg-opacity-10 rounded p-3">
                                <i class="bi bi-clock-history text-info fs-4"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="text-muted mb-1">Upcoming</h6>
                            <h3 class="mb-0">@Model.UpcomingEvents</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="bg-danger bg-opacity-10 rounded p-3">
                                <i class="bi bi-x-circle text-danger fs-4"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="text-muted mb-1">Inactive</h6>
                            <h3 class="mb-0">@Model.InactiveEvents</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters Card -->
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-body">
            <form method="get" asp-action="ManageEvents" id="filterForm">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label class="form-label">Search</label>
                        <input type="text" class="form-control" name="SearchTerm"
                               value="@Model.Filters.SearchTerm" placeholder="Event title or description">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Category</label>
                        <select class="form-select" name="Category">
                            <option value="">All Categories</option>
                            <option value="music" selected="@(Model.Filters.Category == "music")">Music</option>
                            <option value="sports" selected="@(Model.Filters.Category == "sports")">Sports</option>
                            <option value="arts" selected="@(Model.Filters.Category == "arts")">Arts & Culture</option>
                            <option value="business" selected="@(Model.Filters.Category == "business")">Business</option>
                            <option value="food" selected="@(Model.Filters.Category == "food")">Food & Drink</option>
                            <option value="technology" selected="@(Model.Filters.Category == "technology")">Technology</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Status</label>
                        <select class="form-select" name="IsActive">
                            <option value="">All Status</option>
                            <option value="true" selected="@(Model.Filters.IsActive == true)">Active</option>
                            <option value="false" selected="@(Model.Filters.IsActive == false)">Inactive</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Start Date</label>
                        <input type="date" class="form-control" name="StartDate"
                               value="@Model.Filters.StartDate?.ToString("yyyy-MM-dd")">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">End Date</label>
                        <input type="date" class="form-control" name="EndDate"
                               value="@Model.Filters.EndDate?.ToString("yyyy-MM-dd")">
                    </div>
                    <div class="col-md-1 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Events Table -->
    <div class="card border-0 shadow-sm">
        <div class="card-header bg-white py-3">
            <h5 class="mb-0">All Events</h5>
        </div>
        <div class="card-body p-0">
            @if (Model.Events.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Event</th>
                                <th>Organizer</th>
                                <th>Venue</th>
                                <th>Date</th>
                                <th>Price</th>
                                <th>Tickets</th>
                                <th>Revenue</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Events)
                            {
                                <tr>
                                    <td>
                                        <div>
                                            <strong>@item.Event.Title</strong>
                                            <br />
                                            <small class="text-muted">@item.Event.Category</small>
                                        </div>
                                    </td>
                                    <td>@item.OrganizerName</td>
                                    <td>@item.VenueName</td>
                                    <td>
                                        <small>
                                            @item.Event.EventDate.ToString("MMM dd, yyyy")
                                            <br />
                                            @item.Event.EventTime.ToString(@"hh\:mm")
                                        </small>
                                    </td>
                                    <td>Rs. @item.Event.TicketPrice.ToString("N2")</td>
                                    <td>
                                        <small>
                                            <strong>@item.TicketsSold / @item.Event.TotalTickets</strong>
                                            <br />
                                            Available: @item.Event.AvailableTickets
                                        </small>
                                    </td>
                                    <td>
                                        <strong class="text-success">
                                            Rs. @item.TotalRevenue.ToString("N2")
                                        </strong>
                                    </td>
                                    <td>
                                        @if (item.Event.IsActive)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Inactive</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="EditEvent" asp-route-id="@item.Event.Id"
                                               class="btn btn-sm btn-outline-primary" title="Edit">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-outline-warning"
                                                    onclick="toggleEventStatus(@item.Event.Id)" title="Toggle Status">
                                                <i class="bi bi-power"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-danger"
                                                    onclick="deleteEvent(@item.Event.Id)" title="Delete">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-calendar-x display-1 text-muted"></i>
                    <h5 class="mt-3">No events found</h5>
                    <p class="text-muted">Try adjusting your filters</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleEventStatus(eventId) {
            Swal.fire({
                title: 'Toggle Event Status?',
                text: "This will activate/deactivate the event",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, toggle it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("ToggleEventStatus", "Admin")',
                        type: 'POST',
                        data: {
                            id: eventId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire('Success!', response.message, 'success').then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire('Error!', response.message, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Error!', 'An error occurred', 'error');
                        }
                    });
                }
            });
        }

        function deleteEvent(eventId) {
            Swal.fire({
                title: 'Delete Event?',
                text: "This action cannot be undone!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteEvent", "Admin")',
                        type: 'POST',
                        data: {
                            id: eventId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire('Deleted!', response.message, 'success').then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire('Error!', response.message, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Error!', 'An error occurred', 'error');
                        }
                    });
                }
            });
        }
    </script>
}